/// Dimension table for cube 'Tickets'
/// THIS IS A GENERATED CLASS, DO NOT EDIT.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
Class User.Tickets.StarEmailAddressViaContact Extends %DeepSee.DimensionTable [ GeneratedBy = User.Tickets.CLS, Owner = {}, ProcedureBlock ]
{

Index Primary On (DxNameViaContact, DxEmailAddressViaContact) [ Unique ];

/// Dimension property: DxEmailAddressViaContact<br/>
/// Source: Contact.EmailAddress
Property DxEmailAddressViaContact As %String(COLLATION = "SQLUPPER(113)", MAXLEN = 2000) [ Required ];

/// Dimension property: DxNameViaContact<br/>
/// Source: Contact.Name
Property DxNameViaContact As User.Tickets.StarNameViaContact [ Required ];

/// Return the total number of members within this dimension.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod %Count() As %Integer
{
 Set tCount = 0
 &sql(SELECT COUNT(*) INTO :tCount FROM User_Tickets.StarEmailAddressViaContact)
 Quit tCount
}

/// Validate the KEY value for this dimension.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod DxEmailAddressViaContactIsValid(pArg As %String) As %Status
{
 Quit ##class(%DeepSee.DimensionTable).%ValidateKEY(pArg)
}

/// Return the specification string for the given member.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod %GetMemberSpec(pMemberId As %String, pCubeName As %String, pDimNo As %Integer, pHierNo As %Integer, pLevelNo As %Integer) As %String
{
 Set tSpec = ""
 Set:pMemberId'="" tSpec = "&["_$$$dsEscapeIdent(..DxEmailAddressViaContactGetStored(pMemberId))_"]"
 Quit tSpec
}

/// Fetch the value of a given dimension property.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod %GetDimensionProperty(pProp As %String, pID As %String, Output pFormat As %String, Output pType As %String) As %String
{
 Set pProp = $$$UPPER(pProp)
 Set tValue=""
 Set pFormat=""
 If (pProp="DXEMAILADDRESSVIACONTACT") {
  &sql(SELECT DxEmailAddressViaContact INTO :tValue FROM User_Tickets.StarEmailAddressViaContact WHERE %ID = :pID)
  Set pType="%String"
 }
 ElseIf (pProp="DXNAMEVIACONTACT") {
  &sql(SELECT DxNameViaContact INTO :tValue FROM User_Tickets.StarEmailAddressViaContact WHERE %ID = :pID)
  Set pType="User.Tickets.StarNameViaContact"
 }
 Quit tValue
}

Parameter CUBENAME = "Tickets";

Parameter DESCRIPTIONPROPERTY;

Parameter KEYPROPERTY = "DxEmailAddressViaContact";

ForeignKey DxNameViaContact(DxNameViaContact) References User.Tickets.StarNameViaContact() [ NoCheck ];

Storage Default
{
<Data name="StarEmailAddressViaContactDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>DxEmailAddressViaContact</Value>
</Value>
<Value name="3">
<Value>DxNameViaContact</Value>
</Value>
</Data>
<DataLocation>^DeepSee.Dimension("USER.TICKETS.STAREMAILADDRESSVIACONTACT")</DataLocation>
<DefaultData>StarEmailAddressViaContactDefaultData</DefaultData>
<ExtentSize>100</ExtentSize>
<IdLocation>^DeepSee.Dimension("USER.TICKETS.STAREMAILADDRESSVIACONTACT")</IdLocation>
<IndexLocation>^DeepSee.DimensionI("USER.TICKETS.STAREMAILADDRESSVIACONTACT")</IndexLocation>
<StreamLocation>^DeepSee.DimensionS("USER.TICKETS.STAREMAILADDRESSVIACONTACT")</StreamLocation>
<Type>%Storage.Persistent</Type>
}

}
